;=============================================================================
;					Copyright 2014 by KVASER AB, SWEDEN
;
; This software is furnished under a license and may be used and copied
; only in accordance with the terms of such license.
;
;-----------------------------------------------------------------------------
;                     Kvaser, AB RP1210 Vendor INI File
;
;=============================================================================
[VendorInformation]
Version=5.5
;
;-----------------------------------------------------------------------------
;  This INI file and the associated dll are RP1210B compliant. Currently
;  the only item not supported for the supported protocols are:
;			- Broadcast lists
;
;  This DLL still supports RP1210A methods that were dropped in the Rev B
;  specification.
;-----------------------------------------------------------------------------
RP1210=B
;
;-----------------------------------------------------------------------------
;  Kvaser, AB
;  Aminogatan 25 A
;  SE 431 53 Molndal
;  Sweden
;  +46 (0)31 88 63 44        Telephone
;  +46 (0)31 88 63 43        Fax
;  +46 (0)31 706 1375        Support Telephone
;  www.kvaser.com            Website
;  info@kvaser.com           General Questions Email
;  sales@kvaser.com          Sales Department Email
;  support@kvaser.com        Support Department Email
;-----------------------------------------------------------------------------
Name=Kvaser AB
Address1=Aminogatan 25 A
City=Molndal
Country=Sweden
Postal=SE 431 53
Telephone=+46 (0)31 88 63 44
Fax=+46 (0)31 88 63 43
VendorURL=http://www.kvaser.com
;
;-----------------------------------------------------------------------------
;  All products in this INI file are "auto-detect" capable during the
;  connection process.  However, once the RP1210 library has been loaded,
;  Kvaser units should not be added or removed from the system until all
;  RP1210 applications have been closed.
;-----------------------------------------------------------------------------
AutoDetectCapable=Yes
;
;-----------------------------------------------------------------------------
;  All products produce a timestam weight of 1000 microseconds by default.
;  Many of the products support higher resolution and accuracy but the
;  specification does not provide a method for adjusting this resolution.
;-----------------------------------------------------------------------------
TimestampWeight=1000
;
;-----------------------------------------------------------------------------
;  Message and Error string definitions for RP1210A legacy code.  RP1210B has
;  dropped this support because they associate the Window's message
;  notification method with Windows 3.11.  However, the method should work
;  with any Window's version (NT, XP, 2000, etc.) since Windows still supports
;  the messaging paradigm.
;-----------------------------------------------------------------------------
MessageString=KVASER RP1210 INTERRUPT
ErrorString=KVASER RP1210 ERROR
;
;-----------------------------------------------------------------------------
;  API Level Debug Logging is NOT supported at this time.
;
;  If API level debugging is added in the future, the following will apply:
;
;  DebugLevel sets the level of debug information logged:
;     -1 = API Level Debugging is not supported
;      0 = No debug logging should be performed
;      1 = Only ConnectDisconnect/Error Messages are added to the log
;      2 = Add RP1210_SendCommand calls to the log
;      3 = Add all Sent Messages (with filtering) to the log
;      4 = Add all Received Messages (with filtering) to the log
;
;  DebugFile is the file where the debug log information will be placed.
;
;  DebugFileSize is how many 1k chunks you will allow the API to write before
;  writing over previously written entries.  A value of 1024 is 1 megabyte.
;
;  DebugMode controls how the log file is written:
;      0 = Overwrite (completely destroying previous contents)
;      1 = Append (write to the end of the file, keeping any previous
;          contents)
;-----------------------------------------------------------------------------
DebugLevel=-1
DebugFile=
DebugFileSize=
DebugMode=
;
;-----------------------------------------------------------------------------
;  Currently 0 RTS/CTS Sessions are supported.  This will change when J1939
;  support is added.
;-----------------------------------------------------------------------------
NumberOfRTSCTSSessions=0
;
;-----------------------------------------------------------------------------
;  All 5 CAN connect formats defined by RP1210B are supported
;
;  Format 1
;     fpchProtocol = "CAN:Baud=X,SampleLocation=Y,SJW=Z,IDSize=S"
;        - Unlike the specification, SJW can be any value in the range of 1
;          to 4 inclusive.
;        - Unlike the specification, SampleTimes=J can also be used in this
;          format.  See Format 3 in the Specification for details.
;  Format 2
;     fpchProtocol =
;        "CAN:Baud=X,PROP_SEG=A,PHASE_SEG1=B,PHASE_SEG2=C,SJW=Z,IDSize=SS"
;        - When using this method, do not count the Sync Segment as part of
;          any of the provided segment values.  So, the total time quanta is
;          equal to 1 + PROP_SEG + PHASE_SEG1 + PHASE_SEG2.
;        - Unlike the specification, PHASE_SEG2 does not have to be less than
;          PHASE_SEG1.
;        - Unlike the specification, SJW can be any value in the range of 1
;          to 4 inclusive.
;        - Unlike the specification, SampleTimes=Y can also be used in this
;          format.  See Format 3 in the Specification for details.
;  Format 3
;     fpchProtocol="CAN:Baud=X,TSEG1=D,TSEG2=E,SampleTimes=Y,SJW=Z,IDSize=SS"
;        - When using this method, the segment values are as they would be
;          entered in the Intel chip registers.  This means you would
;          subtract 1 from the desired value for TSEG1 and TSEG2.
;        - When using this method, do not count the Sync Segment as part of
;          any of the provided segment values.  So, the total time quanta is
;          equal to 1 + (TSEG1 + 1) + (TSEG2 + 1).
;        - Unlike the specification, TSEG2 does not have to be less than
;          TSEG1.
;        - Unlike the specification, SJW can be any value in the range of 1
;          to 4 inclusive.
;  Format 4   (Original RP1210A format)
;     fpchProtocol="CAN"
;        - Provides a baudrate configuration of 250 kbit/sec, 87.5% sample
;          point, a SJW of 1, and SampleTimes of 1
;  Format 5
;     fpchProtocol="CAN:Baud=x"
;        - Acceptable values for x are
;           125 = 125 kBit/sec, 87.5% sample point, SJW = 1, SampleTimes = 1
;           250 = 250 kBit/sec, 87.5% sample point, SJW = 1, SampleTimes = 1
;           500 = 500 kBit/sec, 75% sample point, SJW = 1, SampleTimes = 1
;          1000 = 1 MBit/sec, 75% sample point, SJW = 1, SampleTimes = 1
;-----------------------------------------------------------------------------
CANFormatsSupported=1,2,3,4,5
;
;-----------------------------------------------------------------------------
;  J1939 support is in BETA.  (Be cautious when using J1939 - testing is
;  not complete) When this development is complete, we will support all
;  the formats specified for CAN.
;  These
;  formats are redescribed here because RP1210B only allows two of them for
;  the J1939 protocol.  RP1210B also chose to assign the formats different
;  numbers than are used for the CAN protocol.
;
;  Format 1
;     fpchProtocol="J1939:Baud=x"
;        - Acceptable values for x are
;           125 = 125 kBit/sec, 87.5% sample point, SJW = 1, SampleTimes = 1
;           250 = 250 kBit/sec, 87.5% sample point, SJW = 1, SampleTimes = 1
;           500 = 500 kBit/sec, 75% sample point, SJW = 1, SampleTimes = 1
;          1000 = 1 MBit/sec, 75% sample point, SJW = 1, SampleTimes = 1
;  Format 2   (Original RP1210A format)
;     fpchProtocol="J1939"
;        - Provides a baudrate configuration of 250 kbit/sec, 87.5% sample
;          point, a SJW of 1, and SampleTimes of 1
;  Format 3  (Not in RP1210B specification for J1939.  Refer to CAN protocol.)
;     fpchProtocol = "J1939:Baud=X,SampleLocation=Y,SJW=Z,IDSize=S"
;        - Unlike the specification, SJW can be any value in the range of 1
;          to 4 inclusive.
;        - Unlike the specification, SampleTimes=J can also be used in this
;          format.  See Format 3 in the Specification for details.
;  Format 4  (Not in RP1210B specification for J1939.  Refer to CAN protocol.)
;     fpchProtocol =
;        "J1939:Baud=X,PROP_SEG=A,PHASE_SEG1=B,PHASE_SEG2=C,SJW=Z,IDSize=SS"
;        - When using this method, do not count the Sync Segment as part of
;          any of the provided segment values.  So, the total time quanta is
;          equal to 1 + PROP_SEG + PHASE_SEG1 + PHASE_SEG2.
;        - Unlike the specification, PHASE_SEG2 does not have to be less than
;          PHASE_SEG1.
;        - Unlike the specification, SJW can be any value in the range of 1
;          to 4 inclusive.
;        - Unlike the specification, SampleTimes=Y can also be used in this
;          format.  See Format 3 in the Specification for details.
;  Format 5  (Not in RP1210B specification for J1939.  Refer to CAN protocol.)
;     fpchProtocol=
;        "J1939:Baud=X,TSEG1=D,TSEG2=E,SampleTimes=Y,SJW=Z,IDSize=SS"
;        - When using this method, the segment values are as they would be
;          entered in the Intel chip registers.  This means you would
;          subtract 1 from the desired value for TSEG1 and TSEG2.
;        - When using this method, do not count the Sync Segment as part of
;          any of the provided segment values.  So, the total time quanta is
;          equal to 1 + (TSEG1 + 1) + (TSEG2 + 1).
;        - Unlike the specification, TSEG2 does not have to be less than
;          TSEG1.
;        - Unlike the specification, SJW can be any value in the range of 1
;          to 4 inclusive.
;-----------------------------------------------------------------------------
J1939FormatsSupported=1,2,3,4,5
;
;-----------------------------------------------------------------------------
;  J1708 support is still under development.  When this development is
;  complete, we will at a minimum support the formats specified in RP1210.
;
;  Format 1
;     fpchProtocol="J1708:Baud=x"
;        - Acceptable values for x are:  9600, 19200, 38400, and 57600
;  Format 2   (Original RP1210A format)
;     fpchProtocol="J1708"
;        - Uses 9600 baud.
;-----------------------------------------------------------------------------
J1708FormatsSupported=
;
;-----------------------------------------------------------------------------
;  ISO15765 support is still under development.  When this development is
;  complete, we will support all the formats specified for CAN.  These
;  formats are redescribed here because RP1210B only allows two of them for
;  the ISO15765 protocol.  RP1210B also chose to assign the formats different
;  numbers than are used for the CAN protocol.
;
;  Format 1
;     fpchProtocol="ISO15765:Baud=x"
;        - Acceptable values for x are:
;           125 = 125 kBit/sec, 87.5% sample point, SJW = 1, SampleTimes = 1
;           250 = 250 kBit/sec, 87.5% sample point, SJW = 1, SampleTimes = 1
;           500 = 500 kBit/sec, 75% sample point, SJW = 1, SampleTimes = 1
;          1000 = 1 MBit/sec, 75% sample point, SJW = 1, SampleTimes = 1
;        - These values are not the same as the specification.  We can not
;          explain why the specification decided to add yet another way of
;          defining a CAN based protocol's bit rate.  So, we have decided to
;          make the method match what is supported for CAN and J1939 while
;          also providing the additional methods.
;  Format 2   (Original RP1210A format)
;     fpchProtocol="ISO15765"
;        - Provides a baudrate configuration of 250 kbit/sec, 87.5% sample
;          point, a SJW of 1, and SampleTimes of 1
;  Format 3  (Not in RP1210B specification for J1939.  Refer to CAN protocol.)
;     fpchProtocol = "ISO15765:Baud=X,SampleLocation=Y,SJW=Z,IDSize=S"
;        - Unlike the specification, SJW can be any value in the range of 1
;          to 4 inclusive.
;        - Unlike the specification, SampleTimes=J can also be used in this
;          format.  See Format 3 in the Specification for details.
;  Format 4  (Not in RP1210B specification for J1939.  Refer to CAN protocol.)
;     fpchProtocol =
;        "ISO15765:Baud=X,PROP_SEG=A,PHASE_SEG1=B,PHASE_SEG2=C,SJW=Z,IDSize=SS"
;        - When using this method, do not count the Sync Segment as part of
;          any of the provided segment values.  So, the total time quanta is
;          equal to 1 + PROP_SEG + PHASE_SEG1 + PHASE_SEG2.
;        - Unlike the specification, PHASE_SEG2 does not have to be less than
;          PHASE_SEG1.
;        - Unlike the specification, SJW can be any value in the range of 1
;          to 4 inclusive.
;        - Unlike the specification, SampleTimes=Y can also be used in this
;          format.  See Format 3 in the Specification for details.
;  Format 5  (Not in RP1210B specification for J1939.  Refer to CAN protocol.)
;     fpchProtocol=
;        "ISO15765:Baud=X,TSEG1=D,TSEG2=E,SampleTimes=Y,SJW=Z,IDSize=SS"
;        - When using this method, the segment values are as they would be
;          entered in the Intel chip registers.  This means you would
;          subtract 1 from the desired value for TSEG1 and TSEG2.
;        - When using this method, do not count the Sync Segment as part of
;          any of the provided segment values.  So, the total time quanta is
;          equal to 1 + (TSEG1 + 1) + (TSEG2 + 1).
;        - Unlike the specification, TSEG2 does not have to be less than
;          TSEG1.
;        - Unlike the specification, SJW can be any value in the range of 1
;          to 4 inclusive.
;-----------------------------------------------------------------------------
ISO15765FormatsSupported=
;
;-----------------------------------------------------------------------------
;  All Kvaser CAN products are supported.  Units with multiple channels must
;  have an entry for each channel.  This file contains an example device entry
;  for each of our hardware types.  If you add an entry, please add the number
;  to this list and to the Protocol entry supported.
;-----------------------------------------------------------------------------
Devices=1,2,25,26,50,51,52,53,75,76,77,78,100,101,125,126,127,128,129,130,131,150,151,175,176,177,180,181,200,201
;
;-----------------------------------------------------------------------------
;  Currently the only protocols supported is CAN.  J1939 and ISO15765 support
;  is in development.  J1708 support is also planned for the future.
;-----------------------------------------------------------------------------
Protocols=1,2
;
;=============================================================================
;  For each channel of each Kvaser product you have attached to your pc, you
;  need a Device Information block.  Each Device Information block must
;  contain the following entries:
;
;  [DeviceInformation#]
;     Where # is the device id number.  This indicates the beginning of a new
;     device information block.  The device id  is a number selected by you
;     that is unique from every other device id number in this INI file.
;
;  DeviceId
;     This is the same device id number used at the end of the Device
;     Information block tag.  This is also the number used when calling the
;     Client Connect routine to identify the desired physical interface.
;
;  DeviceName
;     This is the name of the product as defined by Kvaser.  This information
;     is usually on the label of the device.  The original version of this
;     file provided as part of the installation has an example entry for
;     each one of our product types.  Use these examples to create duplicate
;     entries when multiple versions of the same device are present.
;
;  DeviceDescription
;     This entry can be viewed as a label to be used in GUI interfaces for
;     selecting a physical device.  We have provided descriptions that we
;     think identify the physical channel clearly.  However, this entry is
;     not used by our DLL so you are free to change the value to anything
;     you like.
;
;  DeviceParams
;     This field peforms several functions specific to Kvaser products based
;     on the values entered.  Multiple values can be entered but they must
;     be separated by a space.  They can occur in any order.  The following
;     is an example:
;        DeviceParams=Chan=0 Serial=1234567 Baud=500
;
;     Chan
;        This entry is required for each Device Information block.  If the
;        unit has only one physical channel the value will be 0.  If the
;        unit has multiple physical channels, there must be multiple
;        Device Information blocks - one for each channel.  The Chan value
;        for each of the blocks will be 0 to the total number of channels on
;        the unit minus 1.  For example, a two channel device will have two
;        Device Information blocks with different DeviceId values.  One of the
;        Device Information blocks will have Chan set to 0 and the other
;        Device Information block will have Chan set to 1.
;
;     Serial
;        This entry is optional.  If this field is not provided, the device
;        id will be associated with the first device matching the device name
;        found on the PC.  If you have multiple devices of the same type and
;        would like to make sure that the same physical channel is always
;        selected by the same Device Id, this field should occur in the
;        DeviceParams line with a value matching the unit's serial number.
;        This number can be determined through our hardware configuration
;        applet.  If you are not going to provide a serial number, you
;        must realize that the following units may be mapped to the same
;        physical device:
;           LAPcan = LAPcan II
;           Leaf Light = Leaf SemiPro = Leaf Professional
;           PCIcan = PCIcanX
;           PCIcan II = PCIcanX II
;           USBcan II = USBcan Pro = Memorator
;
;     Baud
;        This entry is optional.  If you are trying to support legacy RP1210A
;        code that needs baud rates other than the default protocol baud rate,
;        this field allows you to set the default baud rate to a different
;        value.  When using this feature, create a duplicate entry for the
;        channel on the device and add this field to the DeviceParams line
;        with the desired nondefault baud rate.  For CAN devices, the allowed
;        values are 125, 250, 500, and 1000.  These values will produce the
;        same results as using the CAN Format 5 with the same values.
;-----------------------------------------------------------------------------
;

;See RP1210B-WorkingDraft-12092010
J1939Addresses=1

[DeviceInformation1]
DeviceId=1
DeviceDescription=LAPcan II Channel 1, PCMCIA
DeviceName=LAPcan II
DeviceParams=Chan=0

[DeviceInformation2]
DeviceId=2
DeviceDescription=LAPcan II Channel 2, PCMCIA
DeviceName=LAPcan II
DeviceParams=Chan=1

[DeviceInformation25]
DeviceId=25
DeviceDescription=PCcan Channel 1, ISA
DeviceName=PCcan
DeviceParams=Chan=0

[DeviceInformation26]
DeviceId=26
DeviceDescription=PCcan Channel 2, ISA
DeviceName=PCcan
DeviceParams=Chan=1

[DeviceInformation50]
DeviceId=50
DeviceDescription=PCIcan Channel 1, PCI
DeviceName=PCIcan
DeviceParams=Chan=0

[DeviceInformation51]
DeviceId=51
DeviceDescription=PCIcan Channel 2, PCI
DeviceName=PCIcan
DeviceParams=Chan=1

[DeviceInformation52]
DeviceId=52
DeviceDescription=PCIcanX Channel 1, PCI
DeviceName=PCIcanX
DeviceParams=Chan=0

[DeviceInformation53]
DeviceId=53
DeviceDescription=PCIcanX Channel 2, PCI
DeviceName=PCIcanX
DeviceParams=Chan=1

[DeviceInformation75]
DeviceId=75
DeviceDescription=PCIcan II Channel 1, PCI
DeviceName=PCIcan II
DeviceParams=Chan=0

[DeviceInformation76]
DeviceId=76
DeviceDescription=PCIcan II Channel 2, PCI
DeviceName=PCIcan II
DeviceParams=Chan=1

[DeviceInformation77]
DeviceId=77
DeviceDescription=PCIcanX II Channel 1, PCI
DeviceName=PCIcanX II
DeviceParams=Chan=0

[DeviceInformation78]
DeviceId=78
DeviceDescription=PCIcanX II Channel 2, PCI
DeviceName=PCIcanX II
DeviceParams=Chan=1

[DeviceInformation100]
DeviceId=100
DeviceDescription=USBcan Channel 1, USB
DeviceName=USBcan
DeviceParams=Chan=0

[DeviceInformation101]
DeviceId=101
DeviceDescription=USBcan Channel 2, USB
DeviceName=USBcan
DeviceParams=Chan=1

[DeviceInformation125]
DeviceId=125
DeviceDescription=USBcan II Channel 1, USB
DeviceName=USBcan II
DeviceParams=Chan=0

[DeviceInformation126]
DeviceId=126
DeviceDescription=USBcan II Channel 2, USB
DeviceName=USBcan II
DeviceParams=Chan=1

[DeviceInformation127]
DeviceId=127
DeviceDescription=USBcan Pro Channel 1, USB
DeviceName=USBcan Pro
DeviceParams=Chan=0

[DeviceInformation128]
DeviceId=128
DeviceDescription=USBcan Pro Channel 2, USB
DeviceName=USBcan Pro
DeviceParams=Chan=1

[DeviceInformation129]
DeviceId=129
DeviceDescription=Memorator Channel 1, USB
DeviceName=Memorator
DeviceParams=Chan=0

[DeviceInformation130]
DeviceId=130
DeviceDescription=Memorator Channel 2, USB
DeviceName=Memorator
DeviceParams=Chan=1

[DeviceInformation131]
DeviceId=131
DeviceDescription=USBcan Pro K-Line Channel 1, USB
DeviceName=USBcan Pro KLine
DeviceParams=Chan=1

[DeviceInformation150]
DeviceId=150
DeviceDescription=Memorator Pro Channel 1, USB
DeviceName=Memorator Pro
DeviceParams=Chan=0

[DeviceInformation151]
DeviceId=151
DeviceDescription=Memorator Pro Channel 2, USB
DeviceName=Memorator Pro
DeviceParams=Chan=1

[DeviceInformation175]
DeviceId=175
DeviceDescription=Leaf Professional, USB
DeviceName=Leaf Professional
DeviceParams=Chan=1

[DeviceInformation176]
DeviceId=176
DeviceDescription=Leaf SemiPro, USB
DeviceName=Leaf SemiPro
DeviceParams=Chan=0,Serial=11460

[DeviceInformation177]
DeviceId=177
DeviceDescription=Leaf Light, USB
DeviceName=Leaf Light
DeviceParams=Chan=0,Serial=15477

[DeviceInformation180]
DeviceId=180
DeviceDescription=BlackBird, WIRELESS
DeviceName=BlackBird
DeviceParams=Chan=0

[DeviceInformation181]
DeviceId=181
DeviceDescription=BlackBird, WIRELESS
DeviceName=BlackBird
DeviceParams=Chan=1

[DeviceInformation200]
DeviceId=200
DeviceDescription=Virtual CAN Channel 1
DeviceName=Virtual Channel
DeviceParams=Chan=0

[DeviceInformation201]
DeviceId=201
DeviceDescription=Virtual CAN Channel 2
DeviceName=Virtual Channel
DeviceParams=Chan=1

;
;=============================================================================
;  Kvaser only supports the CAN protocol at this time.  J1939 and ISO15765
;  support is still in development.  All Kvaser CAN devices support this
;  protocol under RP1210.
;
;-----------------------------------------------------------------------------
[ProtocolInformation1]
ProtocolString=CAN
ProtocolDescription=Generic CAN Protocol
ProtocolSpeed=125,250,500,1000,all
ProtocolParams=
Devices=1,2,25,26,50,51,52,53,75,76,77,78,100,101,125,126,127,128,129,130,131,150,151,175,176,177,180,181,200,201

[ProtocolInformation2]
ProtocolString=J1939
ProtocolDescription=J1939 Link Layer Protocol
ProtocolSpeed=125,250,500,1000,All,Auto
ProtocolParams=Protocol=J1939
Devices=1,2,25,26,50,51,52,53,75,76,77,78,100,101,125,126,127,128,129,130,131,150,151,175,176,177,180,181,200,201

;
;=============================================================================
;                     Kvaser, AB RP1210 Vendor INI File
;=============================================================================
